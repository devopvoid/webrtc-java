name: 'Maven Build'

description: 'Build the platform dependent Java library'

inputs:
  java-version:
    description: 'The Java build version.'
    required: true
    default: '17'

  platform-name:
    description: 'The target platform.'
    required: true

  maven-gpg-private-key:
    description: 'The GPG private key to sign Maven artifacts.'
    required: true

  maven-gpg-passphrase:
    description: 'The GPG passphrase for the GPG key.'
    required: true

  maven-username:
    description: 'The Maven username.'
    required: true

  maven-password:
    description: 'The Maven password.'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up WebRTC cache
      uses: actions/cache@v4
      with:
        path: ~/${{ env.WEBRTC_INSTALL_FOLDER }}
        key: webrtc-${{ env.WEBRTC_CACHE_BRANCH }}-${{ inputs.platform-name }}-${{ hashFiles('webrtc-jni/pom.xml') }}
        restore-keys: webrtc-${{ env.WEBRTC_CACHE_BRANCH }}-${{ inputs.platform-name }}-

    - name: Set up Maven cache
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: maven-${{ inputs.platform-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: maven-${{ inputs.platform-name }}-

    - name: Set up JDK ${{ inputs.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_TOKEN
        gpg-private-key: ${{ inputs.maven-gpg-private-key }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Build
      run: mvn package -DskipTests
      shell: bash

    - name: Test
      run: mvn -B jar:jar surefire:test
      shell: bash

    - name: Deploy
      env:
        MAVEN_USERNAME: ${{ inputs.maven-username }}
        MAVEN_TOKEN: ${{ inputs.maven-password }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.maven-gpg-passphrase }}
      run: mvn deploy -DskipTests
      shell: bash
