/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase */

#ifndef _Included_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
#define _Included_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
#ifdef __cplusplus
extern "C" {
#endif
	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    initPlayout
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_initPlayout
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    stopPlayout
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_stopPlayout
	(JNIEnv*, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    startPlayout
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_startPlayout
	(JNIEnv*, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    initRecording
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_initRecording
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    stopRecording
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_stopRecording
	(JNIEnv*, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    startRecording
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_startRecording
	(JNIEnv*, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getPlayoutDevices
	 * Signature: ()Ljava/util/List;
	 */
	JNIEXPORT jobject JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getPlayoutDevices
	(JNIEnv*, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getRecordingDevices
	 * Signature: ()Ljava/util/List;
	 */
	JNIEXPORT jobject JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getRecordingDevices
	(JNIEnv*, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    setPlayoutDevice
	 * Signature: (Ldev/onvoid/webrtc/media/audio/AudioDevice;)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_setPlayoutDevice
	(JNIEnv *, jobject, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    setRecordingDevice
	 * Signature: (Ldev/onvoid/webrtc/media/audio/AudioDevice;)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_setRecordingDevice
	(JNIEnv *, jobject, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    isSpeakerMuted
	 * Signature: ()Z
	 */
	JNIEXPORT jboolean JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_isSpeakerMuted
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    isMicrophoneMuted
	 * Signature: ()Z
	 */
	JNIEXPORT jboolean JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_isMicrophoneMuted
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getSpeakerVolume
	 * Signature: ()I
	 */
	JNIEXPORT jint JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getSpeakerVolume
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getMaxSpeakerVolume
	 * Signature: ()I
	 */
	JNIEXPORT jint JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getMaxSpeakerVolume
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getMinSpeakerVolume
	 * Signature: ()I
	 */
	JNIEXPORT jint JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getMinSpeakerVolume
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getMicrophoneVolume
	 * Signature: ()I
	 */
	JNIEXPORT jint JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getMicrophoneVolume
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getMaxMicrophoneVolume
	 * Signature: ()I
	 */
	JNIEXPORT jint JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getMaxMicrophoneVolume
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    getMinMicrophoneVolume
	 * Signature: ()I
	 */
	JNIEXPORT jint JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_getMinMicrophoneVolume
	(JNIEnv *, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    setSpeakerVolume
	 * Signature: (I)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_setSpeakerVolume
	(JNIEnv *, jobject, jint);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    setSpeakerMute
	 * Signature: (Z)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_setSpeakerMute
	(JNIEnv *, jobject, jboolean);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    setMicrophoneVolume
	 * Signature: (I)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_setMicrophoneVolume
	(JNIEnv *, jobject, jint);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    setMicrophoneMute
	 * Signature: (Z)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_setMicrophoneMute
	(JNIEnv *, jobject, jboolean);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    addSinkInternal
	 * Signature: (Ldev/onvoid/webrtc/media/audio/AudioSink;)J
	 */
	JNIEXPORT jlong JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_addSinkInternal
	(JNIEnv*, jobject, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    removeSinkInternal
	 * Signature: (J)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_removeSinkInternal
	(JNIEnv*, jobject, jlong);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    addSourceInternal
	 * Signature: (Ldev/onvoid/webrtc/media/audio/AudioSource;)J
	 */
	JNIEXPORT jlong JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_addSourceInternal
	(JNIEnv*, jobject, jobject);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    removeSourceInternal
	 * Signature: (J)V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_removeSourceInternal
	(JNIEnv*, jobject, jlong);

	/*
	 * Class:     dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase
	 * Method:    disposeInternal
	 * Signature: ()V
	 */
	JNIEXPORT void JNICALL Java_dev_onvoid_webrtc_media_audio_AudioDeviceModuleBase_disposeInternal
	(JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
